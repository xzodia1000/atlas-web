import Head from 'next/head';
import { FormEvent, useState } from 'react';
import client from '../lib/axios-service';
import { useMutation } from 'react-query';
import { useSessionUpdateContext } from '../lib/context';
import { useRouter } from 'next/router';

export default function Home() {
  const router = useRouter();

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [rememberMe, setRememberMe] = useState(false);

  const UpdateContext = useSessionUpdateContext();

  const { mutate: validateLogin } = useMutation<any, Error>({
    mutationFn: async () => {
      return await client.post('/auth/login', {
        email,
        password
      });
    },
    onSuccess: async (response) => {
      const token = response.data.access_token;

      if (rememberMe) {
        localStorage.setItem('token', token);
        console.log('token saved in local storage');
      } else {
        sessionStorage.setItem('token', token);
        console.log('token saved in session storage');
      }

      UpdateContext;
      router.push('/');
    },
    onError: async (err) => {
      console.log('error');
      alert(err);
    }
  });

  const postData = async (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    validateLogin();
  };

  return (
    <>
      <Head>
        <title>atlas</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form onSubmit={postData}>
        <label htmlFor="email">Email:</label>
        <input
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          type="email"
          id="email"
          name="email"
          required
        />

        <label htmlFor="password">Password:</label>
        <input
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          type="password"
          id="password"
          name="password"
          required
        />

        <button type="submit">Login</button>
      </form>

      <input type="checkbox" name="rememberme" onChange={(e) => setRememberMe(e.target.checked)} />
      <label htmlFor="rememberme">Remember me</label>
    </>
  );
}
